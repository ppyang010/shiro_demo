<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.code.mvc.dao.UserDao">
  <resultMap id="BaseResultMap" type="org.code.mvc.model.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="salt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="locked" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, salt, locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.code.mvc.model.User">
    insert into sys_users (id, username, password,
      salt, locked)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{locked,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.code.mvc.model.User">
    insert into sys_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.code.mvc.model.User">
    update sys_users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.code.mvc.model.User">
    update sys_users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>



  <select id="getUserByUsername" parameterType="string" resultType="org.code.mvc.model.User">
    select
    <include refid="Base_Column_List" />
    from sys_users
    where username = #{username}
  </select>

  <select id="findRoles" parameterType="string" resultType="string">
    SELECT
	role
    FROM
        sys_users u
    LEFT JOIN sys_users_roles ur ON u.id = ur.user_id
    LEFT JOIN sys_roles r ON ur.role_id = r.id
    WHERE  u.username=#{username}
  </select>

  <select id="findPermissions"  parameterType="string" resultType="string">
    SELECT
        p.permission
    FROM
        sys_permissions p
    JOIN sys_roles_permissions rp ON p.id = rp.permission_id
    LEFT JOIN sys_users_roles ur ON ur.role_id = rp.role_id
    LEFT JOIN sys_users u ON u.id = ur.user_id
    WHERE  u.username=#{username}
  </select>

</mapper>